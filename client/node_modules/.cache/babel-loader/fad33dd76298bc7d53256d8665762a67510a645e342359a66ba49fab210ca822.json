{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding projects\\\\personal_projects\\\\MERN_test\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\n\n// State management using useState hook\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newPriority, setNewPriority] = useState(\"low\");\n  const [newDueDate, setNewDueDate] = useState(\"\");\n  const [editPriority, setEditPriority] = useState(\"low\");\n  const [editDueDate, setDueDate] = useState(\"\");\n\n  // Fetch initial list of todos from server then calls GetTodos function \n  useEffect(() => {\n    GetTodos();\n    console.log(todos);\n  }, []);\n\n  /* Fetches todos using fetch API and updates 'todos' states,\n  Sends GET request to the server's /todos */\n  const GetTodos = () => {\n    fetch(API_BASE + \"/todos\").then(res => res.json()).then(data => setTodos(data)).catch(err => console.error(\"Error :\", err));\n  };\n\n  /* Sends a PUT request to mark a todo as complete or incomplete  using it's ID \n  and then updates the 'todos' state */\n  const completeTodo = async id => {\n    const data = await fetch(API_BASE + \"/todo/complete/\" + id).then(res => res.json());\n    setTodos(todos => todos.map(todo => {\n      if (todo._id === data._id) {\n        todo.complete = data.complete;\n      }\n      return todo;\n    }));\n  };\n\n  /* Sends a DELETE request to delete a todo based on it's id and\n  updates the 'todos' state */\n  const deleteTodo = async id => {\n    const data = await fetch(API_BASE + \"/todo/delete/\" + id, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n    setTodos(todos => todos.filter(todo => todo._id !== data._id));\n  };\n\n  /* Sends a POST request to make a new todo, updates 'todos' state\n   */\n  const addTodo = async () => {\n    const data = await fetch(API_BASE + \"/todo/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: newTodo,\n        priority: newPriority,\n        dueDate: newDueDate\n      })\n    }).then(res => res.json());\n    setTodos([...todos, data]);\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n  const sortTodo = async () => {\n    const data = await fetch(API_BASE + \"/todo/sort\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sortCriteria: newPriority,\n        ascending: false,\n        sortByDueDate: newPriority === \"dueDate\"\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sortDropdown\",\n      onChange: e => {\n        setSortCriterie(e.target.value);\n        sortTodo();\n      },\n      value: sortCriteria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo \" + (todo.complete ? \"is-complete\" : \"\"),\n        onClick: () => completeTodo(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-todo\",\n          onClick: () => deleteTodo(todo._id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPopup\",\n      onClick: () => setPopupActive(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopup\",\n        onClick: () => setPopupActive(false),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), newTodo, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => setNewTodo(e.target.value),\n          value: newTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: addTodo,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"HopWcMzig+3WYLbEYeZyzzfBgAI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","API_BASE","App","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","newPriority","setNewPriority","newDueDate","setNewDueDate","editPriority","setEditPriority","editDueDate","setDueDate","GetTodos","console","log","fetch","then","res","json","data","catch","err","error","completeTodo","id","map","todo","_id","complete","deleteTodo","method","filter","addTodo","headers","body","JSON","stringify","text","priority","dueDate","sortTodo","sortCriteria","ascending","sortByDueDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","setSortCriterie","target","value","onClick","type","_c","$RefreshReg$"],"sources":["D:/Coding projects/personal_projects/MERN_test/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst API_BASE = \"http://localhost:3001\";\n\n// State management using useState hook\nfunction App() {\n    const [todos, setTodos] = useState([]);\n    const [popupActive, setPopupActive] = useState(false);\n    const [newTodo, setNewTodo] = useState(\"\");\n    const [newPriority, setNewPriority] = useState(\"low\");\n    const [newDueDate, setNewDueDate] = useState(\"\");\n    const [editPriority, setEditPriority] = useState(\"low\");\n    const [editDueDate, setDueDate] = useState(\"\");\n\n    // Fetch initial list of todos from server then calls GetTodos function \n    useEffect(() => {\n        GetTodos();\n        console.log(todos);\n    }, [])\n\n    /* Fetches todos using fetch API and updates 'todos' states,\n    Sends GET request to the server's /todos */\n    const GetTodos = () => {\n        fetch(API_BASE + \"/todos\")\n            .then(res => res.json())\n            .then(data => setTodos(data))\n            .catch(err => console.error(\"Error :\", err));\n    }\n\n    /* Sends a PUT request to mark a todo as complete or incomplete  using it's ID \n    and then updates the 'todos' state */ \n    const completeTodo = async id => {\n        const data = await fetch(API_BASE + \"/todo/complete/\" + id)\n            .then(res => res.json());\n\n        setTodos(todos => todos.map(todo => {\n            if (todo._id === data._id) {\n                todo.complete = data.complete;\n            }\n\n            return todo;\n        }));\n    }\n\n    /* Sends a DELETE request to delete a todo based on it's id and\n    updates the 'todos' state */\n    const deleteTodo = async id => {\n        const data = await fetch(API_BASE + \"/todo/delete/\" + id, {\n            method: \"DELETE\"\n        }).then(res => res.json());\n\n        setTodos(todos => todos.filter(todo => todo._id !== data._id));\n    }\n\n    /* Sends a POST request to make a new todo, updates 'todos' state\n     */\n    const addTodo = async () => {\n        const data = await fetch(API_BASE + \"/todo/new\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text: newTodo, \n                priority: newPriority,\n                dueDate: newDueDate\n            }),\n        }).then(res => res.json());\n\n        setTodos([...todos, data]);\n        setPopupActive(false);\n        setNewTodo(\"\");\n    }\n\n    const sortTodo = async () => {\n        const data = await fetch(API_BASE + \"/todo/sort\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                sortCriteria: newPriority,\n                ascending: false,\n                sortByDueDate: newPriority === \"dueDate\",\n            }),\n\n        });\n\n    }\n\treturn (\n\t\t<div className = \"App\">\n            <h1>Checklist</h1>\n            <h4>Your Tasks</h4>\n\n            <select\n                className = \"sortDropdown\"\n                onChange = {e => {\n                    setSortCriterie(e.target.value);\n                    sortTodo();\n                }}\n                value = {sortCriteria}>\n\n                    \n                </select>\n\n            <div className = \"todos\">\n                {todos.map((todo) => (\n                    <div \n                    className = {\"todo \" + (todo.complete ? \"is-complete\" : \"\")}\n                    key = {todo._id} \n                    onClick = {() => completeTodo(todo._id)}>\n                        <div className = \"checkbox\"></div>\n\n                        <div className = \"text\">{ todo.text }</div>\n\n                        <div \n                        className = \"delete-todo\" onClick = {() => deleteTodo(todo._id)}>x</div>\n                    </div>\n                ))}\n            </div>\n\n            <div className = \"addPopup\" onClick = {() => setPopupActive(true)}>+</div>\n\n            {popupActive ? (\n                <div className = \"popup\">\n                    <div className = \"closePopup\" onClick = {() => setPopupActive(false)}>x</div>\n                    <div className = \"content\">\n                        <h3>Add Task</h3>\n                        {newTodo}\n                        <input \n                            type = \"text\" \n                            className = \"add-todo-input\" \n                            onChange = {e => setNewTodo(e.target.value)}\n                            value = {newTodo} \n                        />\n                        <div className = \"button\" onClick = {addTodo}>Create Task</div>\n                    </div>\n                </div>\n                ) : ''}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}